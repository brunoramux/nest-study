generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(STUDENT)
  questions Question[] @relation("question-user")
  answer    Answer[]   @relation("answer-user")
  comment   Comment[]  @relation("comment-user")

  @@map("users")
}

model Question {
  id           String    @id @default(uuid())
  title        String
  slug         String    @unique
  content      String
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  authorId     String    @map("author_id")
  bestAnswerId String    @unique @map("best_answer_id")

  author     User         @relation("question-user", fields: [authorId], references: [id])
  answers    Answer[]     @relation("question-answer")
  bestAnswer Answer?      @relation("bestAnswer", fields: [bestAnswerId], references: [id])
  comment    Comment[]    @relation("comment-question")
  attachment Attachment[] @relation("attachment-question")

  @@map("questions")
}

model Answer {
  id         String    @id @default(uuid())
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  authorId   String    @map("author_id")
  questionId String    @map("question_id")

  question     Question     @relation("question-answer", fields: [questionId], references: [id])
  author       User         @relation("answer-user", fields: [authorId], references: [id])
  bestAnswerOn Question?    @relation("bestAnswer")
  comment      Comment[]    @relation("comment-answer")
  Attachment   Attachment[] @relation("attachment-answer")

  @@map("answers")
}

model Comment {
  id         String    @id @default(uuid())
  content    String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  authorId   String    @map("author_id")
  questionId String?   @map("question_id")
  answerId   String?   @map("answer_id")

  user     User      @relation("comment-user", fields: [authorId], references: [id])
  question Question? @relation("comment-question", fields: [questionId], references: [id])
  answer   Answer?   @relation("comment-answer", fields: [answerId], references: [id])

  @@map("comments")
}

model Attachment {
  id         String  @id @default(uuid())
  title      String
  url        String
  questionId String? @map("question_id")
  answerId   String? @map("answer_id")

  answer   Answer?   @relation("attachment-answer", fields: [answerId], references: [id])
  question Question? @relation("attachment-question", fields: [questionId], references: [id])

  @@map("attachments")
}
